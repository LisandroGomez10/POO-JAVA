#BlueJ class context
comment0.target=CajaDeAhorro
comment0.text=\r\n\ La\ clase\ CajaDeAhorro\ representa\ a\ una\ caja\ bancaria\ de\ ahorro\ con\ su\r\n\ informaci\u00F3n\ como\:\ n\u00FAmero\ de\ cuenta,\ saldo,\ extracciones\ posibles\ y\ el\ titular.\r\n\ Adem\u00E1s,\ proporciona\ los\ m\u00E9todos\ para\ depositar,\ extraer,\ verificar\ si\ se\ puede\ \r\n\ extraer\ dinero\ y\ mostrar\ por\ pantalla\ datos\ del\ titular\ y\ de\ la\ operaci\u00F3n.\r\n\ \r\n\ @author\ Gomez\ Hertler\ Lisandro\r\n\ @version\ 29/8/2024\r\n
comment1.params=p_nroCuenta\ p_titular
comment1.target=CajaDeAhorro(int,\ Persona)
comment1.text=\r\n\ Constructor\ para\ inicializar\ un\ objeto\ de\ la\ clase\ {@code\ CajaDeAhorro}\ con\ n\u00FAmero\ de\ cuenta,\ \r\n\ titular,\ saldo\ que\ incializa\ en\ cero\ (0.0)\ y\ extracciones\ posibles\ que\ inicializa\ en\ diez\ (10).\r\n\r\n\ @param\ p_nroCuenta\ \ \ \ \ \ \ El\ n\u00FAmero\ de\ cuenta\ del\ titular.\r\n\ @param\ p_titular\ \ \ \ \ \ \ \ \ El\ titular\ de\ la\ caja.\r\n
comment10.params=
comment10.target=int\ getExtraP()
comment11.params=p_importe
comment11.target=boolean\ puedeExtraer(double)
comment11.text=\r\n\ Devuelve\ true\ si\ el\ importe\ a\ retirar\ no\ supera\ el\ saldo\r\n\ disponible\ y\ si\ a\u00FAn\ no\ us\u00F3\ todas\ las\ extracciones\ posibles.\r\n\ \r\n\ @param\ p_importe\ valor\ monetario\ pasado\ como\ par\u00E1metro.\r\n\ @return\ un\ valor\ booleano.\r\n
comment12.params=p_importe
comment12.target=void\ extraccion(double)
comment12.text=\r\n\ Realiza\ la\ extracci\u00F3n\ restando\ al\ saldo\ actual\ el\ parametro\ p_importe,\r\n\ y\ descuenta\ 1\ al\ n\u00FAmero\ de\ extracciones\ posibles.\r\n\ \r\n\ @param\ p_importe\ valor\ monetario\ pasado\ como\ par\u00E1metro.\ \r\n
comment13.params=p_importe
comment13.target=void\ extraer(double)
comment13.text=\r\n\ Coordina\ la\ operaci\u00F3n,\ de\ acuerdo\ a\ si\ se\ cumplen\ las\ condiciones\ de\ extracci\u00F3n,\ \r\n\ si\ no\ pudiera\ informar\u00E1\ el\ motivo\ por\ el\ cual\ no\ se\ pudo\ extraer.\r\n\ \r\n\ @param\ p_importe\ valor\ monetario\ pasado\ como\ par\u00E1metro.\r\n
comment14.params=p_importe
comment14.target=void\ depositar(double)
comment14.text=\r\n\ Agrega\ el\ importe\ al\ saldo\ actual.\r\n\ \r\n\ @param\ p_importe\ valor\ monetario\ pasado\ como\ par\u00E1metro.\r\n
comment15.params=
comment15.target=void\ mostrar()
comment15.text=\r\n\ Muestra\ la\ informaci\u00F3n\ de\ la\ caja\ de\ ahorro\ por\ pantalla.\r\n\ Incluye\ n\u00FAmero\ de\ cuenta,\ saldo,\ nombre\ y\ apellido\ del\ titular\r\n\ y\ las\ extracciones\ posibles.\r\n
comment2.params=p_nroCuenta\ p_titular\ p_saldo
comment2.target=CajaDeAhorro(int,\ Persona,\ double)
comment2.text=\r\n\ Constructor\ para\ inicializar\ un\ objeto\ de\ la\ clase\ {@code\ CajaDeAhorro}\ con\ n\u00FAmero\ de\ cuenta,\ \r\n\ titular,\ saldo\ y\ extracciones\ posibles\ que\ inicializa\ en\ diez\ (10).\r\n\r\n\ @param\ p_nroCuenta\ \ \ \ \ \ \ El\ n\u00FAmero\ de\ cuenta\ del\ titular.\r\n\ @param\ p_titular\ \ \ \ \ \ \ \ \ El\ titular\ de\ la\ caja.\r\n\ @param\ setSaldo\ \ \ \ \ \ \ \ \ \ El\ saldo\ del\ titular.\r\n
comment3.params=p_nroCuenta
comment3.target=void\ setNroCuenta(int)
comment3.text=\r\n\ Establece\ el\ n\u00FAmero\ de\ cuenta\ del\ titular.\r\n\r\n\ @param\ p_nroCuenta\ El\ nuevo\ n\u00FAmero\ de\ cuenta\ del\ titular.\r\n
comment4.params=
comment4.target=int\ getNroCuenta()
comment4.text=\r\n\ Obtiene\ el\ n\u00FAmero\ de\ cuenta\ del\ titular.\r\n\r\n\ @return\ el\ n\u00FAmero\ de\ cuenta\ del\ titular.\r\n
comment5.params=p_titular
comment5.target=void\ setTitular(Persona)
comment5.text=\r\n\ Establece\ a\ la\ persona\ como\ titular.\r\n\ \r\n\ @param\ p_titular\ el\ nuevo\ titular.\r\n
comment6.params=
comment6.target=Persona\ getTitular()
comment6.text=\r\n\ Obtiene\ al\ titular.\r\n\ \r\n\ @return\ el\ titular\ y\ sus\ datos.\r\n
comment7.params=p_saldo
comment7.target=void\ setSaldo(double)
comment8.params=
comment8.target=double\ getSaldo()
comment9.params=p_extraccionesPosibles
comment9.target=void\ setExtraP(int)
numComments=16
