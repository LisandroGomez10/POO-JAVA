#BlueJ class context
comment0.target=CuentaCorriente
comment0.text=\r\n\ La\ clase\ CuentaCorriente\ representa\ a\ una\ cuenta\ corriente\ con\ su\r\n\ informaci\u00F3n\ como\:\ n\u00FAmero\ de\ cuenta,\ saldo,\ l\u00EDmite\ descubierto\ y\ el\ titular.\r\n\ Adem\u00E1s,\ proporciona\ los\ m\u00E9todos\ para\ depositar,\ extraer,\ verificar\ si\ se\ puede\ \r\n\ extraer\ dinero\ y\ mostrar\ por\ pantalla\ datos\ del\ titular\ y\ de\ la\ operaci\u00F3n.\r\n\ \r\n\ @author\ Gomez\ Hertler\ Lisandro\r\n\ @version\ 30/8/2024\r\n
comment1.params=p_nroCuenta\ p_titular
comment1.target=CuentaCorriente(int,\ Persona)
comment1.text=\r\n\ Constructor\ para\ inicializar\ un\ objeto\ de\ la\ clase\ {@code\ CuentaCorriente}\ con\ n\u00FAmero\ de\ cuenta,\ \r\n\ titular,\ saldo\ que\ incializa\ en\ cero\ (0.0)\ y\ l\u00EDmite\ decubierto\ que\ inicializa\ en\ quinientos\ (500.0).\r\n\r\n\ @param\ p_nroCuenta\ \ \ \ \ \ \ El\ n\u00FAmero\ de\ cuenta\ del\ titular.\r\n\ @param\ p_titular\ \ \ \ \ \ \ \ \ El\ titular\ de\ la\ caja.\r\n
comment10.params=p_titular
comment10.target=void\ setTitular(Persona)
comment11.params=p_importe
comment11.target=boolean\ puedeExtraer(double)
comment11.text=\r\n\ \ devuelve\ true\ si\ el\ importe\ a\ retirar\ no\ supera\ el\r\n\ \ saldo\ m\u00E1s\ el\ l\u00EDmite\ de\ descubierto\ autorizado.\r\n\ \r\n\ @param\ p_importe\ valor\ monetario\ pasado\ como\ par\u00E1metro.\r\n\ @return\ un\ valor\ booleano.\r\n
comment12.params=p_importe
comment12.target=void\ extraccion(double)
comment12.text=\r\n\ Realiza\ la\ extracci\u00F3n\ restando\ al\ saldo\ actual\ el\ importe.\r\n\ \r\n\ @param\ p_importe\ valor\ monetario\ pasado\ como\ par\u00E1metro.\ \r\n
comment13.params=p_extraer
comment13.target=void\ extraer(double)
comment13.text=\r\n\ Coordina\ la\ operaci\u00F3n,\ de\ acuerdo\ a\ si\ se\ cumplen\ las\ condiciones\ de\ extracci\u00F3n,\ \r\n\ caso\ contrario\ informar\u00E1\ el\ motivo\ por\ el\ cual\ no\ se\ pudo\ extraer.\r\n\ \r\n\ @param\ p_importe\ valor\ monetario\ pasado\ como\ par\u00E1metro.\r\n
comment14.params=p_importe
comment14.target=void\ depositar(double)
comment14.text=\r\n\ Agrega\ el\ importe\ al\ saldo\ actual.\r\n\ \r\n\ @param\ p_importe\ valor\ monetario\ pasado\ como\ par\u00E1metro.\r\n
comment15.params=
comment15.target=void\ mostrar()
comment15.text=\r\n\ Muestra\ la\ informaci\u00F3n\ de\ la\ cuenta\ corriente\ por\ pantalla.\r\n\ Incluye\ n\u00FAmero\ de\ cuenta,\ saldo,\ nombre\ y\ apellido\ del\ titular\r\n\ y\ el\ l\u00EDmite\ descuebierto.\r\n
comment2.params=p_nroCuenta\ p_titular\ p_saldo
comment2.target=CuentaCorriente(int,\ Persona,\ double)
comment2.text=\r\n\ Constructor\ para\ inicializar\ un\ objeto\ de\ la\ clase\ {@code\ CuentaCorriente}\ con\ n\u00FAmero\ de\ cuenta,\ \r\n\ titular,\ saldo\ y\ l\u00EDmite\ decubierto\ que\ inicializa\ en\ quinientos\ (500.0).\r\n\r\n\ @param\ p_nroCuenta\ \ \ \ \ \ \ El\ n\u00FAmero\ de\ cuenta\ del\ titular.\r\n\ @param\ p_titular\ \ \ \ \ \ \ \ \ El\ titular\ de\ la\ caja.\r\n\ @param\ p_saldo\ \ \ \ \ \ \ \ \ \ \ El\ saldo\ de\ la\ cuenta\ corriente.\r\n
comment3.params=
comment3.target=int\ getNroCuenta()
comment4.params=p_nroCuenta
comment4.target=void\ setNroCuenta(int)
comment5.params=
comment5.target=double\ getSaldo()
comment5.text=\r\n\ Obtiene\ el\ saldo\ de\ la\ cuenta\ corriente.\r\n\ \r\n\ @return\ el\ saldo\ de\ la\ cuenta\ corriente.\r\n
comment6.params=p_saldo
comment6.target=void\ setSaldo(double)
comment6.text=\r\n\ Establece\ el\ saldo\ de\ la\ cuenta\ corriente.\r\n\ \r\n\ @param\ p_saldo\ saldo\ de\ la\ cuenta\ corriente.\r\n
comment7.params=
comment7.target=double\ getLimiteDescubierto()
comment8.params=p_limiteDescubierto
comment8.target=void\ setLimiteDescubierto(double)
comment9.params=
comment9.target=Persona\ getTitular()
numComments=16
