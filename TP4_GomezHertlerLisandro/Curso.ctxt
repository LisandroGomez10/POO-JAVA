#BlueJ class context
comment0.target=Curso
comment0.text=\r\n\ La\ clase\ {@code\ Curso}\ representa\ a\ un\ curso\ con\ informaci\u00F3n\ como\:\r\n\ nombre\ y\ colecci\u00F3n\ de\ alumnos\ cursantes\ de\ la\ carrera.\ \r\n\ \r\n\ @author\ Gomez\ Hertler\ Lisandro\r\n\ @version\ 22/09/2024\r\n
comment1.params=p_nombre
comment1.target=Curso(java.lang.String)
comment1.text=\r\n\ Constructor\ para\ inicializar\ un\ objeto\ de\ la\ clase\ {@code\ Curso}\ con\ \r\n\ nombre.\r\n\r\n\ @param\ p_nombre\ \ \ \ \ \ \ \ \ \ \ \ \ \ El\ nombre\ de\ la\ carrera.\r\n
comment10.params=p_lu
comment10.target=boolean\ estaInscripto(int)
comment10.text=\r\n\ Verifica\ si\ el\ alumno\ esta\ inscripto\ a\ la\ carrera.\r\n\ \r\n\ @param\ p_lu\ LU\ del\ alumno.\r\n\ @return\ valor\ booleano.\r\n
comment11.params=p_alumno
comment11.target=boolean\ estaInscripto(Alumno)
comment11.text=\r\n\ Verifica\ si\ el\ alumno\ esta\ inscripto\ a\ la\ carrera.\r\n\ \r\n\ @param\ p_alumno\ el\ alumno.\r\n\ @return\ valor\ booleano.\r\n
comment12.params=p_lu
comment12.target=Alumno\ buscarAlumno(int)
comment12.text=\r\n\ \ Retorna\ el\ alumno\ que\ corresponde\ al\ LU\ pasado\ como\ par\u00E1metro.\r\n\ \r\n\ @param\ p_lu\ LU\ del\ alumno.\r\n\ @return\ el\ alumno.\r\n
comment13.params=p_lu
comment13.target=void\ imprimirPromedioDelAlumno(int)
comment13.text=\r\n\ Muestra\ por\ pantalla\ el\ promedio\ del\ alumno\ que\ corresponde\r\n\ a\ la\ LU\ pasada\ como\ par\u00E1metro.\r\n\ \r\n\ @param\ p_lu\ LU\ del\ alumno.\r\n\ @return\ el\ promedio\ o\ negaci\u00F3n\ de\ la\ existencia\ del\ LU.\r\n
comment14.params=
comment14.target=void\ mostrarInscriptos()
comment14.text=\r\n\ Muestra\ por\ pantalla\ el\ nombre\ de\ la\ carrera,\ cantidad\ de\ alumnos\r\n\ inscriptos\ y\ los\ alumnos\ inscriptos.\r\n
comment2.params=p_nombre\ p_alumnos
comment2.target=Curso(java.lang.String,\ java.util.HashMap)
comment2.text=\r\n\ Constructor\ para\ inicializar\ un\ objeto\ de\ la\ clase\ {@code\ Curso}\ con\ \r\n\ nombre\ y\ alumnos.\r\n\r\n\ @param\ p_nombre\ \ \ \ \ \ \ \ \ \ \ \ \ \ El\ nombre\ del\ alumno.\r\n\ @param\ p_alumnos\ \ \ \ \ \ \ \ \ \ \ \ \ Alumnos\ cursantes\ de\ la\ carrera.\r\n
comment3.params=p_nombre
comment3.target=void\ setNombre(java.lang.String)
comment3.text=\r\n\ Establece\ el\ nombre\ de\ la\ carrera.\r\n\ \r\n\ @param\ p_nombre\ el\ nombre\ de\ la\ carrera.\r\n
comment4.params=p_alumnos
comment4.target=void\ setAlumnos(java.util.HashMap)
comment5.params=
comment5.target=java.lang.String\ getNombre()
comment5.text=\r\n\ Obtiene\ el\ nombre\ de\ la\ carrera.\r\n\ \r\n\ @return\ el\ nombre\ de\ la\ carrera.\r\n
comment6.params=
comment6.target=java.util.HashMap\ getAlumnos()
comment7.params=p_alumno
comment7.target=void\ inscribirAlumno(Alumno)
comment7.text=\r\n\ Agrega\ un\ nuevo\ alumno\ a\ la\ colecci\u00F3n.\r\n\ \r\n\ @param\ p_alumno\ alumno\ para\ inscribir.\r\n
comment8.params=p_lu
comment8.target=Alumno\ quitarAlumno(int)
comment8.text=\r\n\ Quita\ un\ alumno\ a\ la\ colecci\u00F3n\ mediante\ su\ LU.\r\n\ \r\n\ @param\ p_lu\ LU\ del\ alumno\ para\ quitar.\r\n\ @return\ el\ alumno\ quitado\ de\ la\ colecci\u00F3n.\r\n
comment9.params=
comment9.target=int\ cantidadDeAlumnos()
comment9.text=\r\n\ Informar\ la\ cantidad\ de\ alumnos\ inscriptos\ a\ la\ carrera.\r\n\ \r\n\ @return\ el\ total\ de\ los\ alumnos\ inscriptos.\r\n
numComments=15
