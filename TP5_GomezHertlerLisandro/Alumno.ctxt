#BlueJ class context
comment0.target=Alumno
comment0.text=\r\n\ La\ clase\ {Alumno}\ representa\ a\ un\ estudiante\ con\ informaci\u00F3n\ b\u00E1sica\ como\ LU\ (N\u00FAmero\ de\ Legajo),\r\n\ nombre,\ apellido\ y\ las\ notas\ de\ dos\ ex\u00E1menes.\ Proporciona\ m\u00E9todos\ para\ establecer\ notas,\ calcular\ el\r\n\ promedio,\ verificar\ si\ aprueba\ y\ mostrar\ la\ informaci\u00F3n\ del\ alumno.\r\n\ \r\n\ @author\ Gomez\ Hertler\ Lisandro\r\n\ @version\ 21/8/2024\r\n
comment1.params=p_dni\ p_lu\ p_nombre\ p_apellido\ p_anio\ p_nota1\ p_nota2
comment1.target=Alumno(int,\ int,\ java.lang.String,\ java.lang.String,\ int,\ double,\ double)
comment1.text=\r\n\ Constructor\ para\ inicializar\ un\ objeto\ de\ la\ clase\ {@code\ Alumno}\ con\ LU,\ nombre\ y\ apellido.\r\n\ Inicializa\ las\ notas\ a\ 0.\r\n\r\n\ @param\ p_lu\ \ \ \ \ \ El\ n\u00FAmero\ de\ legajo\ del\ alumno.\r\n\ @param\ p_nombre\ \ El\ nombre\ del\ alumno.\r\n\ @param\ p_apellido\ El\ apellido\ del\ alumno.\r\n
comment10.params=
comment10.target=java.lang.String\ leyendaAprueba()
comment10.text=\r\n\ Retorna\ una\ cadena\ que\ indica\ el\ estado\ de\ aprobaci\u00F3n\ del\ alumno.\r\n\r\n\ @return\ "Aprobado"\ si\ el\ alumno\ aprueba,\ "Desaprobado"\ en\ caso\ contrario.\r\n
comment11.params=
comment11.target=java.lang.String\ nomYApe()
comment11.text=\r\n\ Obtiene\ el\ nombre\ completo\ del\ alumno\ en\ el\ formato\ "Nombre\ Apellido".\r\n\r\n\ @return\ El\ nombre\ completo\ del\ alumno.\r\n
comment12.params=
comment12.target=java.lang.String\ apeYNom()
comment12.text=\r\n\ Obtiene\ el\ nombre\ completo\ del\ alumno\ en\ el\ formato\ "Apellido\ Nombre".\r\n\r\n\ @return\ El\ nombre\ completo\ del\ alumno\ en\ el\ formato\ "Apellido\ Nombre".\r\n
comment13.params=
comment13.target=void\ mostrar()
comment13.text=\r\n\ Muestra\ la\ informaci\u00F3n\ completa\ del\ alumno\ en\ la\ consola.\r\n\ Incluye\ nombre,\ LU,\ notas,\ promedio\ y\ leyenda\ de\ aprobaci\u00F3n.\r\n
comment2.params=
comment2.target=int\ getLu()
comment2.text=\r\n\ Obtiene\ el\ n\u00FAmero\ de\ legajo\ del\ alumno.\r\n\r\n\ @return\ El\ n\u00FAmero\ de\ legajo\ del\ alumno.\r\n
comment3.params=p_lu
comment3.target=void\ setLu(int)
comment3.text=\r\n\ Establece\ el\ n\u00FAmero\ de\ legajo\ del\ alumno.\r\n\r\n\ @param\ p_lu\ El\ nuevo\ n\u00FAmero\ de\ legajo\ del\ alumno.\r\n
comment4.params=
comment4.target=double\ getNota1()
comment4.text=\r\n\ Obtiene\ la\ primera\ nota\ del\ alumno.\r\n\r\n\ @return\ La\ primera\ nota\ del\ alumno.\r\n
comment5.params=p_nota1
comment5.target=void\ setNota1(double)
comment5.text=\r\n\ Establece\ la\ primera\ nota\ del\ alumno.\r\n\r\n\ @param\ p_nota1\ La\ primera\ nota\ del\ alumno.\r\n
comment6.params=
comment6.target=double\ getNota2()
comment6.text=\r\n\ Obtiene\ la\ segunda\ nota\ del\ alumno.\r\n\r\n\ @return\ La\ segunda\ nota\ del\ alumno.\r\n
comment7.params=p_nota2
comment7.target=void\ setNota2(double)
comment7.text=\r\n\ Establece\ la\ segunda\ nota\ del\ alumno.\r\n\r\n\ @param\ p_nota2\ La\ segunda\ nota\ del\ alumno.\r\n
comment8.params=
comment8.target=double\ promedio()
comment8.text=\r\n\ Calcula\ el\ promedio\ de\ las\ dos\ notas\ del\ alumno.\r\n\r\n\ @return\ El\ promedio\ de\ las\ dos\ notas.\r\n
comment9.params=
comment9.target=boolean\ aprueba()
comment9.text=\r\n\ Verifica\ si\ el\ alumno\ aprueba\ bas\u00E1ndose\ en\ el\ promedio\ y\ en\ las\ notas\ individuales.\r\n\ El\ alumno\ aprueba\ si\ el\ promedio\ es\ mayor\ que\ 7\ y\ ambas\ notas\ son\ mayores\ que\ 6.\r\n\r\n\ @return\ {@code\ true}\ si\ el\ alumno\ aprueba,\ {@code\ false}\ en\ caso\ contrario.\r\n
numComments=14
