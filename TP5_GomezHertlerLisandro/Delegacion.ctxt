#BlueJ class context
comment0.target=Delegacion
comment0.text=\r\n\ Clase\ que\ representa\ una\ delegaci\u00F3n\ de\ visitantes\ en\ un\ zool\u00F3gico.\r\n\ Hereda\ de\ la\ clase\ abstracta\ Visitante\ y\ permite\ gestionar\ un\ grupo\r\n\ de\ individuos\ que\ visitan\ el\ zool\u00F3gico.\r\n\ \r\n\ @author\ Lisandro\ Gomez\ Hertler\r\n\ @version\ 20/10/2024\r\n
comment1.params=p_nombre\ p_fecha\ p_integrantes
comment1.target=Delegacion(java.lang.String,\ java.util.Calendar,\ java.util.ArrayList)
comment1.text=\r\n\ Constructor\ que\ inicializa\ una\ delegaci\u00F3n\ con\ un\ nombre,\ fecha\ de\ visita\r\n\ y\ una\ lista\ de\ integrantes.\r\n\ \r\n\ @param\ p_nombre\ Nombre\ de\ la\ delegaci\u00F3n.\r\n\ @param\ p_fecha\ Fecha\ de\ visita\ de\ la\ delegaci\u00F3n.\r\n\ @param\ p_integrantes\ Lista\ de\ individuos\ que\ componen\ la\ delegaci\u00F3n.\r\n
comment10.params=p_fecha\ p_visitante
comment10.target=void\ listarPorFecha(java.util.Calendar,\ java.lang.String)
comment10.text=\r\n\ Lista\ la\ delegaci\u00F3n\ si\ coincide\ la\ fecha\ y\ el\ tipo\ de\ visitante.\r\n\ \r\n\ @param\ p_fecha\ Fecha\ de\ visita\ a\ verificar.\r\n\ @param\ p_visitante\ Tipo\ de\ visitante.\r\n
comment11.params=
comment11.target=java.lang.String\ tipoVisitante()
comment11.text=\r\n\ Devuelve\ el\ tipo\ de\ visitante\ de\ la\ delegaci\u00F3n.\r\n\ \r\n\ @return\ Tipo\ de\ visitante.\r\n
comment12.params=
comment12.target=java.util.HashSet\ listarPersonas()
comment12.text=\r\n\ Lista\ las\ personas\ asociadas\ a\ los\ integrantes\ de\ la\ delegaci\u00F3n.\r\n\ \r\n\ @return\ Conjunto\ de\ personas\ asociadas.\r\n
comment2.params=p_nombre\ p_fecha\ p_individuo
comment2.target=Delegacion(java.lang.String,\ java.util.Calendar,\ Individuo)
comment2.text=\r\n\ Constructor\ que\ inicializa\ una\ delegaci\u00F3n\ con\ un\ nombre,\ fecha\ de\ visita\r\n\ y\ un\ solo\ integrante.\r\n\ \r\n\ @param\ p_nombre\ Nombre\ de\ la\ delegaci\u00F3n.\r\n\ @param\ p_fecha\ Fecha\ de\ visita\ de\ la\ delegaci\u00F3n.\r\n\ @param\ p_individuo\ Individuo\ a\ inscribir\ en\ la\ delegaci\u00F3n.\r\n
comment3.params=
comment3.target=java.util.ArrayList\ getIntegrantes()
comment3.text=\r\n\ Devuelve\ la\ lista\ de\ integrantes\ de\ la\ delegaci\u00F3n.\r\n\ \r\n\ @return\ Lista\ de\ integrantes.\r\n
comment4.params=p_integrantes
comment4.target=void\ setIntegrantes(java.util.ArrayList)
comment5.params=p_individuo
comment5.target=void\ inscribirIndividuo(Individuo)
comment5.text=\r\n\ Inscribe\ un\ individuo\ a\ la\ delegaci\u00F3n\ si\ no\ est\u00E1\ ya\ inscrito.\r\n\ \r\n\ @param\ p_individuo\ Individuo\ a\ inscribir.\r\n
comment6.params=p_individuo
comment6.target=boolean\ quitarIntegrante(Individuo)
comment6.text=\r\n\ Elimina\ un\ individuo\ de\ la\ delegaci\u00F3n.\r\n\ \r\n\ @param\ p_individuo\ Individuo\ a\ quitar.\r\n\ @return\ Verdadero\ si\ se\ elimin\u00F3\ correctamente,\ falso\ de\ lo\ contrario.\r\n
comment7.params=
comment7.target=int\ cantidadIntegrantes()
comment7.text=\r\n\ Devuelve\ la\ cantidad\ de\ integrantes\ en\ la\ delegaci\u00F3n.\r\n\ \r\n\ @return\ Cantidad\ de\ integrantes.\r\n
comment8.params=
comment8.target=void\ mostrar()
comment8.text=\r\n\ Muestra\ la\ informaci\u00F3n\ de\ la\ delegaci\u00F3n\ y\ sus\ integrantes.\r\n
comment9.params=
comment9.target=double\ entrada()
comment9.text=\r\n\ Calcula\ el\ costo\ total\ de\ la\ entrada\ para\ la\ delegaci\u00F3n,\ aplicando\ un\r\n\ descuento\ del\ 10%.\r\n\ \r\n\ @return\ Costo\ total\ de\ la\ entrada.\r\n
numComments=13
