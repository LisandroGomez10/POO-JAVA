#BlueJ class context
comment0.target=Jardin
comment0.text=\r\n\ Clase\ Jardin\ que\ representa\ un\ jard\u00EDn\ que\ contiene\ figuras\ geom\u00E9tricas.\r\n\ Permite\ calcular\ el\ \u00E1rea\ total\ y\ la\ cantidad\ de\ latas\ de\ pintura\ necesarias\r\n\ para\ cubrir\ la\ superficie\ de\ las\ figuras.\r\n\ \r\n\ @author\ Lisandro\ Gomez\ Hertler\r\n\ @version\ 20/10/2024\r\n
comment1.params=p_nombre\ p_figura
comment1.target=Jardin(java.lang.String,\ java.util.ArrayList)
comment1.text=\r\n\ Constructor\ de\ la\ clase\ Jardin\ con\ una\ lista\ de\ figuras\ geom\u00E9tricas.\r\n\ \r\n\ @param\ p_nombre\ Nombre\ del\ jard\u00EDn.\r\n\ @param\ p_figura\ Lista\ de\ figuras\ geom\u00E9tricas\ en\ el\ jard\u00EDn.\r\n
comment10.params=
comment10.target=int\ cuantasLatas()
comment10.text=\r\n\ Calcula\ la\ cantidad\ de\ latas\ de\ pintura\ necesarias\ para\ cubrir\ el\ jard\u00EDn.\r\n\ \r\n\ @return\ Cantidad\ de\ latas\ necesarias.\r\n
comment11.params=
comment11.target=double\ cuantosMetros()
comment11.text=\r\n\ Calcula\ la\ superficie\ total\ de\ todas\ las\ figuras\ geom\u00E9tricas\ en\ el\ jard\u00EDn.\r\n\ \r\n\ @return\ Superficie\ total\ de\ las\ figuras.\r\n
comment12.params=
comment12.target=void\ detalleFiguras()
comment12.text=\r\n\ Muestra\ un\ detalle\ de\ las\ figuras\ en\ el\ jard\u00EDn,\ incluyendo\ el\ total\ a\ cubrir\r\n\ y\ la\ cantidad\ de\ latas\ a\ comprar.\r\n
comment2.params=p_nombre
comment2.target=Jardin(java.lang.String)
comment2.text=\r\n\ Constructor\ de\ la\ clase\ Jardin\ sin\ figuras\ geom\u00E9tricas\ iniciales.\r\n\ \r\n\ @param\ p_nombre\ Nombre\ del\ jard\u00EDn.\r\n
comment3.params=
comment3.target=java.lang.String\ getNombre()
comment3.text=\r\n\ Obtiene\ el\ nombre\ del\ jard\u00EDn.\r\n\ \r\n\ @return\ Nombre\ del\ jard\u00EDn.\r\n
comment4.params=p_nombre
comment4.target=void\ setNombre(java.lang.String)
comment4.text=\r\n\ Establece\ el\ nombre\ del\ jard\u00EDn.\r\n\ \r\n\ @param\ p_nombre\ Nombre\ del\ jard\u00EDn.\r\n
comment5.params=
comment5.target=java.util.ArrayList\ getFigura()
comment5.text=\r\n\ Obtiene\ la\ lista\ de\ figuras\ geom\u00E9tricas\ en\ el\ jard\u00EDn.\r\n\ \r\n\ @return\ Lista\ de\ figuras\ geom\u00E9tricas.\r\n
comment6.params=p_figura
comment6.target=void\ setFigura(java.util.ArrayList)
comment6.text=\r\n\ Establece\ la\ lista\ de\ figuras\ geom\u00E9tricas\ en\ el\ jard\u00EDn.\r\n\ \r\n\ @param\ p_figura\ Lista\ de\ figuras\ geom\u00E9tricas.\r\n
comment7.params=figura
comment7.target=void\ agregarFigura(FiguraGeometrica)
comment7.text=\r\n\ Agrega\ una\ figura\ geom\u00E9trica\ al\ jard\u00EDn.\r\n\ \r\n\ @param\ figura\ Figura\ geom\u00E9trica\ a\ agregar.\r\n
comment8.params=indice
comment8.target=void\ quitarFigura(int)
comment8.text=\r\n\ Quita\ una\ figura\ geom\u00E9trica\ del\ jard\u00EDn\ seg\u00FAn\ su\ \u00EDndice.\r\n\ \r\n\ @param\ indice\ \u00CDndice\ de\ la\ figura\ a\ quitar.\r\n
comment9.params=
comment9.target=double\ cuantosLitros()
comment9.text=\r\n\ Calcula\ la\ cantidad\ de\ litros\ de\ pintura\ necesarios\ para\ cubrir\ el\ jard\u00EDn.\r\n\ \r\n\ @return\ Litros\ de\ pintura\ necesarios.\r\n
numComments=13
